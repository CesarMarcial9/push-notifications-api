const OneSignal = require("@onesignal/node-onesignal");
const CreateClient = require("./CreateClient");
const dotenv = require('dotenv')
dotenv.config();

/**
 * SendNotification takes in a client and an insight, and then
 * creates a notification based on the provided insight.
 *
 * @param {OneSignal.DefaultApi} client
 * @param {Insight} insight The insight generated by mx
 * @returns
 */
const SendNotification = async (completeInsight) => {
  const client = CreateClient()
  const notification = new OneSignal.Notification();
  const {insight} = completeInsight

  if (insight == undefined || insight == null) {
    return OneSignal.InlineResponse400
  }

  if (Object.keys(insight).length < 1 || completeInsight == undefined) {
    return OneSignal.InlineResponse400
  } 

  notification.app_id = process.env.APP_ID;
  notification.headings = { en: insight.title, es: insight.title };
  notification.contents = { en: insight.description, es: insight.description };
  notification.name = insight.template;
  notification.channel_for_external_user_ids = "push";
  notification.include_external_user_ids = [insight.user_guid];

  try {
    const response = await client.createNotification(notification);
    return response;
  } catch (e) {
    {
      console.error(e)
      return OneSignal.InlineResponse400
    }
  }
};

module.exports = SendNotification;
